// algorithm
-move sorting
    principal variation
    killer moves
    history moves (?)
    threat detection (by checking for enemy moves instead of own moves)
-generate_children optimization (remember the moves and only change for this.last_move)
DONE-write a wrapper for the first negamax call to catch data such as best move
-filled_positions could be a bitset too. would be faster AND updating filled_positions is easier in recursion


// heuristic
    -last move instead of entire heuristic for the whole board every time
    -more meaningful heuristic implementation


// other
    -tweak t_table & h_table. check for collisions & spread across buckets
    - GUI

// GUI
    -menu
    -undo
    -show 5 in a row
    -load settings from file

// Player
    delete function pointer
