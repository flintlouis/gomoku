#include <bitset>
#include <iostream>
#include <unordered_map>
// #include <cmath>

using std::bitset;
using std::unordered_map;
using std::cout;
using std::endl;

uint64_t hash(bitset<722> board)
{
    uint64_t result = 0;
	uint64_t mask = 1;

    for (int chunk = 0; chunk < 14; chunk++)
    {;
        for (int i = 0; i < 64; i++)
		{
			if (board[i])
				result ^= mask;
			mask <<= 1;
		}
		result *= (chunk + 1);
		// cout << result << "   " << endl;
        board >>= 64;
		mask = 1;
		// cout << board << endl;
    }
    return result;
}



int	main()
{
	// bitset<722> board
	bitset<722> board
	bitset<465> test = 3459236829769268671LLU;
	unordered_map<bitset<722>, int> table;

	// test.to_ulong();
	// cout << "?" << endl;
	uint64_t result = hash(board);

	// cout << uint64_t(uint64_t(14658090887184121856) * uint64_t(14658090887184121856)) << endl;
	// cout << uint64_t(uint64_t(15745874368024018944) * uint64_t(15745874368024018944)) << endl;

	cout << result << endl;

	return 0;
}

